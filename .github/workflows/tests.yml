name: tests

on: [push, pull_request]

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Install
        run: |
          sudo apt-get update
          sudo apt-get install clang-format-12
          sudo ln -f /usr/bin/clang-format-12 /usr/bin/clang-format

      - name: Format
        run: |
          clang-format --version
          find src -name '*.cpp'|xargs clang-format --dry-run --Werror --style=file
          find src -name '*.h'|xargs clang-format --dry-run --Werror --style=file

  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install gcc-11 g++-11 clang-tidy-12 llvm-12
          sudo ln -f /usr/bin/clang-tidy-12 /usr/bin/clang-tidy
          sudo ln -f /usr/bin/llvm-symbolizer-12 /usr/bin/llvm-symbolizer
          sudo ln -f /usr/bin/gcov-11 /usr/bin/gcov
          pip install gcovr
          mkdir -p build

      - name: Configure
        run: |
          git submodule update --init
          cd build
          GCOV=gcov-11 CC=gcc-11 CXX=g++-11 cmake  ..
          make enable-debug
          make enable-test

      - name: Compile
        run: |
          cd build
          make -j $(nproc)

      - name: Git Clone
        if: always() && (github.ref == 'refs/heads/master')
        run: |
          git clone --single-branch --branch gh-pages https://${{ secrets.GH_TOKEN }}@github.com/Delaunay/lython.git build/coverage/
          git config --global user.email "Coverage"
          git config --global user.name "Coverage Bot"

      - name: Test
        run: |
          cd build
          make coverage
          cd coverage
          python ../../scripts/parse_coverage.py --report coverage.xml --csv coverage.csv --template template/badge.svg --target badge.svg

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v2

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: always() && (github.ref == 'refs/heads/master')
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/coverage
